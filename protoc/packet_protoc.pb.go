// Code generated by protoc-gen-go.
// source: packet_protoc.proto
// DO NOT EDIT!

package protoc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Compression int32

const (
	Compression_NONE Compression = 0
	Compression_ZLIB Compression = 1
	Compression_GZIP Compression = 2
	Compression_LZF  Compression = 3
)

var Compression_name = map[int32]string{
	0: "NONE",
	1: "ZLIB",
	2: "GZIP",
	3: "LZF",
}
var Compression_value = map[string]int32{
	"NONE": 0,
	"ZLIB": 1,
	"GZIP": 2,
	"LZF":  3,
}

func (x Compression) String() string {
	return proto.EnumName(Compression_name, int32(x))
}
func (Compression) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type PacketType int32

const (
	PacketType_UNKNOWN              PacketType = 0
	PacketType_HANDSHAKE            PacketType = 1
	PacketType_CLIENTAUTHENTICATION PacketType = 2
	PacketType_ACK                  PacketType = 3
	PacketType_SUBSCRIPTION         PacketType = 4
	PacketType_UNSUBSCRIPTION       PacketType = 5
	PacketType_GET                  PacketType = 6
	PacketType_MESSAGES             PacketType = 7
	PacketType_CLIENTACK            PacketType = 8
	PacketType_HEARTBEAT            PacketType = 9
	PacketType_CLIENTROLLBACK       PacketType = 10
)

var PacketType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "HANDSHAKE",
	2:  "CLIENTAUTHENTICATION",
	3:  "ACK",
	4:  "SUBSCRIPTION",
	5:  "UNSUBSCRIPTION",
	6:  "GET",
	7:  "MESSAGES",
	8:  "CLIENTACK",
	9:  "HEARTBEAT",
	10: "CLIENTROLLBACK",
}
var PacketType_value = map[string]int32{
	"UNKNOWN":              0,
	"HANDSHAKE":            1,
	"CLIENTAUTHENTICATION": 2,
	"ACK":            3,
	"SUBSCRIPTION":   4,
	"UNSUBSCRIPTION": 5,
	"GET":            6,
	"MESSAGES":       7,
	"CLIENTACK":      8,
	"HEARTBEAT":      9,
	"CLIENTROLLBACK": 10,
}

func (x PacketType) String() string {
	return proto.EnumName(PacketType_name, int32(x))
}
func (PacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Packet struct {
	MagicNumber int32       `protobuf:"varint,1,opt,name=magic_number,json=magicNumber" json:"magic_number,omitempty"`
	Version     int32       `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	Type        PacketType  `protobuf:"varint,3,opt,name=type,enum=protoc.PacketType" json:"type,omitempty"`
	Compression Compression `protobuf:"varint,4,opt,name=compression,enum=protoc.Compression" json:"compression,omitempty"`
	Body        []byte      `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *Packet) Reset()                    { *m = Packet{} }
func (m *Packet) String() string            { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()               {}
func (*Packet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type HeartBeat struct {
	SendTimestamp  int64 `protobuf:"varint,1,opt,name=send_timestamp,json=sendTimestamp" json:"send_timestamp,omitempty"`
	StartTimestamp int64 `protobuf:"varint,2,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
}

func (m *HeartBeat) Reset()                    { *m = HeartBeat{} }
func (m *HeartBeat) String() string            { return proto.CompactTextString(m) }
func (*HeartBeat) ProtoMessage()               {}
func (*HeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Handshake struct {
	CommunicationEncoding string        `protobuf:"bytes,1,opt,name=communication_encoding,json=communicationEncoding" json:"communication_encoding,omitempty"`
	Seeds                 []byte        `protobuf:"bytes,2,opt,name=seeds,proto3" json:"seeds,omitempty"`
	SupportedCompressions []Compression `protobuf:"varint,3,rep,name=supported_compressions,json=supportedCompressions,enum=protoc.Compression" json:"supported_compressions,omitempty"`
}

func (m *Handshake) Reset()                    { *m = Handshake{} }
func (m *Handshake) String() string            { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()               {}
func (*Handshake) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// client authentication
type ClientAuth struct {
	Username        string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password        []byte `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	NetReadTimeout  int32  `protobuf:"varint,3,opt,name=net_read_timeout,json=netReadTimeout" json:"net_read_timeout,omitempty"`
	NetWriteTimeout int32  `protobuf:"varint,4,opt,name=net_write_timeout,json=netWriteTimeout" json:"net_write_timeout,omitempty"`
	Destination     string `protobuf:"bytes,5,opt,name=destination" json:"destination,omitempty"`
	ClientId        string `protobuf:"bytes,6,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Filter          string `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	StartTimestamp  int64  `protobuf:"varint,8,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
}

func (m *ClientAuth) Reset()                    { *m = ClientAuth{} }
func (m *ClientAuth) String() string            { return proto.CompactTextString(m) }
func (*ClientAuth) ProtoMessage()               {}
func (*ClientAuth) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type Ack struct {
	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (m *Ack) Reset()                    { *m = Ack{} }
func (m *Ack) String() string            { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()               {}
func (*Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type ClientAck struct {
	Destination string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId    string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	BatchId     int64  `protobuf:"varint,3,opt,name=batch_id,json=batchId" json:"batch_id,omitempty"`
}

func (m *ClientAck) Reset()                    { *m = ClientAck{} }
func (m *ClientAck) String() string            { return proto.CompactTextString(m) }
func (*ClientAck) ProtoMessage()               {}
func (*ClientAck) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

// subscription
type Sub struct {
	Destination string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId    string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Filter      string `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
}

func (m *Sub) Reset()                    { *m = Sub{} }
func (m *Sub) String() string            { return proto.CompactTextString(m) }
func (*Sub) ProtoMessage()               {}
func (*Sub) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

// Unsubscription
type Unsub struct {
	Destination string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId    string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Filter      string `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
}

func (m *Unsub) Reset()                    { *m = Unsub{} }
func (m *Unsub) String() string            { return proto.CompactTextString(m) }
func (*Unsub) ProtoMessage()               {}
func (*Unsub) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

//  PullRequest
type Get struct {
	Destination string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId    string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FetchSize   int32  `protobuf:"varint,3,opt,name=fetch_size,json=fetchSize" json:"fetch_size,omitempty"`
	Timeout     int64  `protobuf:"varint,4,opt,name=timeout" json:"timeout,omitempty"`
	Unit        int32  `protobuf:"varint,5,opt,name=unit" json:"unit,omitempty"`
	AutoAck     bool   `protobuf:"varint,6,opt,name=auto_ack,json=autoAck" json:"auto_ack,omitempty"`
}

func (m *Get) Reset()                    { *m = Get{} }
func (m *Get) String() string            { return proto.CompactTextString(m) }
func (*Get) ProtoMessage()               {}
func (*Get) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

//
type Messages struct {
	BatchId  int64    `protobuf:"varint,1,opt,name=batch_id,json=batchId" json:"batch_id,omitempty"`
	Messages [][]byte `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (m *Messages) Reset()                    { *m = Messages{} }
func (m *Messages) String() string            { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()               {}
func (*Messages) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

type ClientRollback struct {
	Destination string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId    string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	BatchId     int64  `protobuf:"varint,3,opt,name=batch_id,json=batchId" json:"batch_id,omitempty"`
}

func (m *ClientRollback) Reset()                    { *m = ClientRollback{} }
func (m *ClientRollback) String() string            { return proto.CompactTextString(m) }
func (*ClientRollback) ProtoMessage()               {}
func (*ClientRollback) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func init() {
	proto.RegisterType((*Packet)(nil), "protoc.Packet")
	proto.RegisterType((*HeartBeat)(nil), "protoc.HeartBeat")
	proto.RegisterType((*Handshake)(nil), "protoc.Handshake")
	proto.RegisterType((*ClientAuth)(nil), "protoc.ClientAuth")
	proto.RegisterType((*Ack)(nil), "protoc.Ack")
	proto.RegisterType((*ClientAck)(nil), "protoc.ClientAck")
	proto.RegisterType((*Sub)(nil), "protoc.Sub")
	proto.RegisterType((*Unsub)(nil), "protoc.Unsub")
	proto.RegisterType((*Get)(nil), "protoc.Get")
	proto.RegisterType((*Messages)(nil), "protoc.Messages")
	proto.RegisterType((*ClientRollback)(nil), "protoc.ClientRollback")
	proto.RegisterEnum("protoc.Compression", Compression_name, Compression_value)
	proto.RegisterEnum("protoc.PacketType", PacketType_name, PacketType_value)
}

func init() { proto.RegisterFile("packet_protoc.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x0e, 0x45, 0xfd, 0x71, 0x24, 0x2b, 0xec, 0x26, 0x31, 0xd8, 0x16, 0x01, 0x54, 0x16, 0x6d,
	0x0d, 0x1f, 0x72, 0xe8, 0xcf, 0x03, 0x50, 0x2a, 0x6b, 0xb1, 0x56, 0x68, 0x63, 0x45, 0x21, 0x80,
	0x5b, 0x94, 0x58, 0x91, 0x13, 0x9b, 0x95, 0xc9, 0x25, 0xb8, 0xcb, 0x06, 0xce, 0xa3, 0xf4, 0xdc,
	0x63, 0x1f, 0xa0, 0xe8, 0xd3, 0x15, 0xbb, 0xa4, 0x14, 0x39, 0x48, 0xd0, 0x43, 0x90, 0x93, 0xf7,
	0xfb, 0xf1, 0xcc, 0xec, 0xcc, 0x2c, 0x05, 0x8f, 0x4a, 0x96, 0x6c, 0x51, 0xc6, 0x65, 0xc5, 0x25,
	0x4f, 0x9e, 0xe9, 0x3f, 0xa4, 0xdf, 0x20, 0xf7, 0x1f, 0x03, 0xfa, 0x97, 0x5a, 0x27, 0x5f, 0xc0,
	0x38, 0x67, 0xd7, 0x59, 0x12, 0x17, 0x75, 0xbe, 0xc1, 0xca, 0x31, 0xa6, 0xc6, 0x49, 0x8f, 0x8e,
	0x34, 0x17, 0x6a, 0x8a, 0x38, 0x30, 0xf8, 0x03, 0x2b, 0x91, 0xf1, 0xc2, 0xe9, 0x68, 0x75, 0x07,
	0xc9, 0xd7, 0xd0, 0x95, 0x77, 0x25, 0x3a, 0xe6, 0xd4, 0x38, 0x99, 0x7c, 0x4b, 0x9e, 0xb5, 0xc9,
	0x9a, 0xd0, 0xd1, 0x5d, 0x89, 0x54, 0xeb, 0xe4, 0x07, 0x18, 0x25, 0x3c, 0x2f, 0x2b, 0x14, 0x3a,
	0x4a, 0x57, 0xdb, 0x1f, 0xed, 0xec, 0xf3, 0x37, 0x12, 0x3d, 0xf4, 0x11, 0x02, 0xdd, 0x0d, 0x4f,
	0xef, 0x9c, 0xde, 0xd4, 0x38, 0x19, 0x53, 0x7d, 0x76, 0x7f, 0x01, 0x6b, 0x81, 0xac, 0x92, 0x33,
	0x64, 0x92, 0x7c, 0x05, 0x13, 0x81, 0x45, 0x1a, 0xcb, 0x2c, 0x47, 0x21, 0x59, 0x5e, 0xea, 0xf2,
	0x4d, 0x7a, 0xa4, 0xd8, 0x68, 0x47, 0x92, 0x6f, 0xe0, 0xa1, 0x90, 0xac, 0x92, 0x07, 0xbe, 0x8e,
	0xf6, 0x4d, 0x34, 0xbd, 0x37, 0xba, 0x7f, 0x19, 0x60, 0x2d, 0x58, 0x91, 0x8a, 0x1b, 0xb6, 0x55,
	0x55, 0x1f, 0x27, 0x3c, 0xcf, 0xeb, 0x22, 0x4b, 0x98, 0xcc, 0x78, 0x11, 0x63, 0x91, 0xf0, 0x34,
	0x2b, 0xae, 0x75, 0x16, 0x8b, 0x3e, 0xb9, 0xa7, 0xfa, 0xad, 0x48, 0x1e, 0x43, 0x4f, 0x20, 0xa6,
	0x42, 0xe7, 0x18, 0xd3, 0x06, 0x90, 0x9f, 0xe1, 0x58, 0xd4, 0x65, 0xc9, 0x2b, 0x89, 0x69, 0x7c,
	0x70, 0x49, 0xe1, 0x98, 0x53, 0xf3, 0x7d, 0xdd, 0x78, 0xb2, 0xff, 0x97, 0x03, 0x56, 0xb8, 0x7f,
	0x76, 0x00, 0xe6, 0xb7, 0x19, 0x16, 0xd2, 0xab, 0xe5, 0x0d, 0xf9, 0x0c, 0x86, 0xb5, 0xc0, 0xaa,
	0x60, 0x39, 0xb6, 0x95, 0xed, 0xb1, 0xd2, 0x4a, 0x26, 0xc4, 0x2b, 0x5e, 0xa5, 0x6d, 0x3d, 0x7b,
	0x4c, 0x4e, 0xc0, 0x2e, 0x50, 0xc6, 0x15, 0xb2, 0xa6, 0x83, 0xbc, 0x96, 0x7a, 0x92, 0x3d, 0x3a,
	0x29, 0x50, 0x52, 0x64, 0xba, 0x85, 0xbc, 0x96, 0xe4, 0x14, 0x3e, 0x51, 0xce, 0x57, 0x55, 0x26,
	0x71, 0x6f, 0xed, 0x6a, 0xeb, 0xc3, 0x02, 0xe5, 0x0b, 0xc5, 0xef, 0xbc, 0x53, 0x18, 0xa5, 0x28,
	0x64, 0x56, 0xe8, 0xae, 0xe8, 0xd9, 0x59, 0xf4, 0x90, 0x22, 0x9f, 0x83, 0x95, 0xe8, 0xea, 0xe3,
	0x2c, 0x75, 0xfa, 0x4d, 0xc1, 0x0d, 0x11, 0xa4, 0xe4, 0x18, 0xfa, 0x2f, 0xb3, 0x5b, 0x89, 0x95,
	0x33, 0xd0, 0x4a, 0x8b, 0xde, 0x35, 0xc3, 0xe1, 0x3b, 0x67, 0x18, 0x80, 0xe9, 0x25, 0x5b, 0xf2,
	0x14, 0x00, 0xab, 0x8a, 0x57, 0x71, 0xc2, 0x53, 0x6c, 0xb7, 0xda, 0xd2, 0xcc, 0x9c, 0xa7, 0x48,
	0xbe, 0x84, 0xa3, 0x46, 0xce, 0x51, 0x08, 0x76, 0x8d, 0xba, 0x39, 0x16, 0x1d, 0x6b, 0xf2, 0x79,
	0xc3, 0xb9, 0x08, 0x56, 0xdb, 0xe6, 0x64, 0xfb, 0xf6, 0xbd, 0x8c, 0xff, 0xb9, 0x57, 0xe7, 0xad,
	0x7b, 0x7d, 0x0a, 0xc3, 0x0d, 0x93, 0xc9, 0x8d, 0xd2, 0x4c, 0x5d, 0xf8, 0x40, 0xe3, 0x20, 0x75,
	0x7f, 0x05, 0x73, 0x55, 0x6f, 0x3e, 0x34, 0xc1, 0x7b, 0x1a, 0xe7, 0xfe, 0x06, 0xbd, 0x75, 0x21,
	0x3e, 0x5e, 0xfc, 0xbf, 0x0d, 0x30, 0xcf, 0x50, 0x7e, 0x68, 0xf8, 0xa7, 0x00, 0x2f, 0x51, 0xf5,
	0x47, 0x64, 0xaf, 0xb1, 0x5d, 0x43, 0x4b, 0x33, 0xab, 0xec, 0x35, 0xaa, 0x6f, 0xd0, 0xe1, 0xde,
	0x99, 0x74, 0x07, 0xd5, 0x47, 0xa2, 0x2e, 0x32, 0xa9, 0x17, 0xad, 0x47, 0xf5, 0x59, 0x35, 0x9b,
	0xd5, 0x92, 0xc7, 0x2c, 0xd9, 0xea, 0x05, 0x1b, 0xd2, 0x81, 0xc2, 0x5e, 0xb2, 0x75, 0x3d, 0x18,
	0xb6, 0xe3, 0x15, 0xf7, 0x66, 0x62, 0xdc, 0x9b, 0x89, 0x7a, 0x37, 0xed, 0x66, 0xa8, 0x77, 0x6c,
	0xaa, 0x77, 0xb3, 0xc3, 0xee, 0xef, 0x30, 0x69, 0xd6, 0x82, 0xf2, 0xdb, 0xdb, 0x0d, 0xfb, 0x98,
	0xbb, 0x71, 0xfa, 0x3d, 0x8c, 0x0e, 0x9e, 0x3e, 0x19, 0x42, 0x37, 0xbc, 0x08, 0x7d, 0xfb, 0x81,
	0x3a, 0x5d, 0x2d, 0x83, 0x99, 0x6d, 0xa8, 0xd3, 0xd9, 0x55, 0x70, 0x69, 0x77, 0xc8, 0x00, 0xcc,
	0xe5, 0xd5, 0x4f, 0xb6, 0x79, 0xfa, 0xaf, 0x01, 0xf0, 0xe6, 0x23, 0x4c, 0x46, 0x30, 0x58, 0x87,
	0xe7, 0xe1, 0xc5, 0x8b, 0xd0, 0x7e, 0x40, 0x8e, 0xc0, 0x5a, 0x78, 0xe1, 0x8f, 0xab, 0x85, 0x77,
	0xee, 0xdb, 0x06, 0x71, 0xe0, 0xf1, 0x7c, 0x19, 0xf8, 0x61, 0xe4, 0xad, 0xa3, 0x85, 0x1f, 0x46,
	0xc1, 0xdc, 0x8b, 0x82, 0x8b, 0xb0, 0x89, 0xe6, 0xcd, 0xcf, 0x6d, 0x93, 0xd8, 0x30, 0x5e, 0xad,
	0x67, 0xab, 0x39, 0x0d, 0x2e, 0xb5, 0xd4, 0x25, 0x04, 0x26, 0xeb, 0xf0, 0x1e, 0xd7, 0x53, 0xf6,
	0x33, 0x3f, 0xb2, 0xfb, 0x64, 0x0c, 0xc3, 0xe7, 0xfe, 0x6a, 0xe5, 0x9d, 0xf9, 0x2b, 0x7b, 0xa0,
	0xd2, 0xb5, 0xf1, 0xe7, 0xe7, 0xf6, 0x50, 0x67, 0xf7, 0x3d, 0x1a, 0xcd, 0x7c, 0x2f, 0xb2, 0x2d,
	0x15, 0xa8, 0x51, 0xe9, 0xc5, 0x72, 0x39, 0x53, 0x16, 0xd8, 0x34, 0x3f, 0x52, 0xdf, 0xfd, 0x17,
	0x00, 0x00, 0xff, 0xff, 0x4b, 0xb9, 0x93, 0x03, 0xc2, 0x06, 0x00, 0x00,
}
